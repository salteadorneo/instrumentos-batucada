---
import Layout from "../../layouts/Layout.astro";

import { CollectionEntry, getCollection } from "astro:content";

import Product from "../../components/Product.astro";
import instruments from "../../data/instruments.json";

import brandsData from "../../data/brands.json";

export async function getStaticPaths() {
	const posts = await getCollection("instrumento");
	return posts.map((item) => ({
		params: { slug: item.slug },
		props: {
			instrumento: item,
		},
	}));
}
type Props = CollectionEntry<"instrumento">;

const { instrumento } = Astro.props;

const { plural, brands } = instrumento.data;

const { Content } = await instrumento.render();

const { slug } = Astro.params;

if (!slug) {
	throw new Error("No slug provided");
}

const re = new RegExp(slug, "gi");
---

<Layout title={plural}>
	<Content />
	{
		instruments.filter((i) => i.name.match(re) || i.keywords?.match(re))
			.length > 0 && (
			<>
				<h2>
					Los mejores {plural} de {new Date().getFullYear()}
				</h2>
				<div class="grid md:grid-cols-2 lg:grid-cols-4 gap-4 my-8">
					{instruments
						.filter(
							(i) => i.name.match(re) || i.keywords?.match(re)
						)
						.slice(0, 4)
						.map((instrument) => {
							return <Product {...instrument} vertical />;
						})}
				</div>
			</>
		)
	}
	{
		brandsData.filter((i) => brands?.includes(i.slug)).length > 0 && (
			<>
				<h2>Las mejores marcas de {plural}</h2>
				<div class="grid md:grid-cols-2 lg:grid-cols-4 gap-4 my-8">
					{brandsData
						.filter((i) => brands?.includes(i.slug))
						.map((brand) => (
							<a href={`/marca/${brand.slug}`} class="">
								<img
									class="object-contain h-24 grayscale saturate-200"
									src={brand.image}
									alt={brand.name}
								/>
							</a>
						))}
				</div>
			</>
		)
	}
</Layout>
